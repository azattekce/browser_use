# Azure Container Apps Deployment Script (PowerShell)
# Kullanƒ±m: .\deploy-to-azure.ps1 -ResourceGroup "jokeruitest-rg" -AppName "jokeruitest-browser-app"

param(
    [string]$ResourceGroup = "jokeruitest-rg",
    [string]$AppName = "jokeruitest-browser-app", 
    [string]$EnvironmentName = "jokeruitest-env",
    [string]$Location = "West Europe",
    [string]$RegistryName = "myacrjokeruitest1",
    [string]$ImageName = "myacrjokeruitest1.azurecr.io/jokeruitest:v1.0"
)

Write-Host "üöÄ Azure Container Apps Deployment ba≈ülatƒ±lƒ±yor..." -ForegroundColor Green
Write-Host "üìã Resource Group: $ResourceGroup" -ForegroundColor Yellow
Write-Host "üìã App Name: $AppName" -ForegroundColor Yellow
Write-Host "üìã Environment: $EnvironmentName" -ForegroundColor Yellow
Write-Host "üìã Image: $ImageName" -ForegroundColor Yellow

# 1. Resource Group olu≈ütur
Write-Host "üì¶ Resource Group kontrol ediliyor..." -ForegroundColor Blue
try {
    az group show --name $ResourceGroup | Out-Null
    Write-Host "‚úÖ Resource Group mevcut: $ResourceGroup" -ForegroundColor Green
} catch {
    Write-Host "‚ú® Resource Group olu≈üturuluyor: $ResourceGroup" -ForegroundColor Yellow
    az group create --name $ResourceGroup --location $Location
}

# 2. Container Apps Environment olu≈ütur
Write-Host "üåç Container Apps Environment kontrol ediliyor..." -ForegroundColor Blue
try {
    az containerapp env show --name $EnvironmentName --resource-group $ResourceGroup | Out-Null
    Write-Host "‚úÖ Container Apps Environment mevcut: $EnvironmentName" -ForegroundColor Green
} catch {
    Write-Host "‚ú® Container Apps Environment olu≈üturuluyor: $EnvironmentName" -ForegroundColor Yellow
    az containerapp env create --name $EnvironmentName --resource-group $ResourceGroup --location $Location
}

# 3. ACR Login
Write-Host "üì¶ Azure Container Registry'ye giri≈ü..." -ForegroundColor Blue
az acr login --name $RegistryName

# ACR admin enable
az acr update --name $RegistryName --admin-enabled true

# ACR credentials
$acrUsername = az acr credential show --name $RegistryName --query username --output tsv
$acrPassword = az acr credential show --name $RegistryName --query passwords[0].value --output tsv

# 4. Container App deployment
Write-Host "üîß Container App deployment..." -ForegroundColor Blue

$envVars = @(
    "FLASK_ENV=production",
    "PORT=5002", 
    "RUNNING_IN_DOCKER=true",
    "AZURE_CONTAINER_APP=true",
    "DOCKER_USER=docker_admin",
    "HEADLESS=false",
    "PYTHONPATH=/app",
    "DISPLAY=:99",
    "LLM_PROVIDER=gemini",
    "LLM_MODEL=gemini-flash-latest",
    "WINDOW_WIDTH=1920",
    "WINDOW_HEIGHT=1080", 
    "IMPLICIT_WAIT=5",
    "EXPLICIT_WAIT=10",
    "MAX_STEPS=50",
    "DATABASE_URL=sqlite:////app/instance/browser_test.db"
)

try {
    az containerapp show --name $AppName --resource-group $ResourceGroup | Out-Null
    Write-Host "üîÑ Container App g√ºncelleniyor: $AppName" -ForegroundColor Yellow
    
    az containerapp update `
        --name $AppName `
        --resource-group $ResourceGroup `
        --image $ImageName `
        --set-env-vars $envVars
} catch {
    Write-Host "‚ú® Container App olu≈üturuluyor: $AppName" -ForegroundColor Yellow
    
    az containerapp create `
        --name $AppName `
        --resource-group $ResourceGroup `
        --environment $EnvironmentName `
        --image $ImageName `
        --registry-server "$RegistryName.azurecr.io" `
        --registry-username $acrUsername `
        --registry-password $acrPassword `
        --target-port 5002 `
        --ingress external `
        --env-vars $envVars `
        --cpu 2.0 `
        --memory 4Gi `
        --min-replicas 1 `
        --max-replicas 2
}

# 5. Sonu√ßlarƒ± g√∂ster
Write-Host ""
Write-Host "‚úÖ Deployment tamamlandƒ±!" -ForegroundColor Green

$fqdn = az containerapp show --name $AppName --resource-group $ResourceGroup --query properties.configuration.ingress.fqdn --output tsv
Write-Host "üåê Container App URL: https://$fqdn" -ForegroundColor Cyan

Write-Host ""
Write-Host "‚ö†Ô∏è  MANUEL ADIM GEREKLI:" -ForegroundColor Red
Write-Host "üìã Azure Portal'da a≈üaƒüƒ±daki port mapping'i ekleyin:" -ForegroundColor Yellow
Write-Host "   - Container Port: 6080 ‚Üí Exposed Port: 6080 (External: true)" -ForegroundColor White
Write-Host "   - Container Port: 5900 ‚Üí Exposed Port: 5900 (External: false)" -ForegroundColor White

Write-Host ""
Write-Host "üìã VNC eri≈üimi i√ßin URL (port mapping'den sonra):" -ForegroundColor Yellow
$vncFqdn = $fqdn -replace "--5002", "--6080"
Write-Host "üñ•Ô∏è  VNC URL: https://$vncFqdn/vnc.html" -ForegroundColor Cyan

Write-Host ""
Write-Host "üîç Logs kontrol√º i√ßin:" -ForegroundColor Blue
Write-Host "az containerapp logs show --name $AppName --resource-group $ResourceGroup --follow" -ForegroundColor White